/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.mycompany.mini.zoo;

import java.awt.Component;
import java.awt.Dimension;
import java.awt.Image;
import java.net.MalformedURLException;
import java.net.URL;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.BoxLayout;
import javax.swing.ImageIcon;
import javax.swing.JDialog;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.SwingUtilities;
/**
 *
 * @author mierd
 */
public class MiniZooMainMenu extends javax.swing.JFrame {

    /**
     * Creates new form MiniZooMainMenu
     */
    public MiniZooMainMenu() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        btnAction = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Que animal eres?");
        setResizable(false);

        jLabel1.setText("Â¿Que animal eres?");

        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("Este programa te dira el animal que serias si volvieras a nacer.");

        btnAction.setText("Quiero saber!");
        btnAction.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnActionActionPerformed(evt);
            }
        });

        jButton2.setText("?");

        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("No es ninguna mentira, utilizamos resultados basados en investigaciones cientificas.");

        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel4.setText("PRUEBALO YA!!");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(199, 199, 199)
                        .addComponent(jLabel1))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(96, 96, 96)
                        .addComponent(jLabel2))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(199, 199, 199)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(btnAction)
                            .addComponent(jLabel4))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 55, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jButton2)
                        .addGap(26, 26, 26))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addGap(44, 44, 44))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addComponent(jButton2)
                .addGap(31, 31, 31)
                .addComponent(jLabel1)
                .addGap(26, 26, 26)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel4)
                .addGap(49, 49, 49)
                .addComponent(btnAction)
                .addContainerGap(85, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnActionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnActionActionPerformed
        JPanel panelLoading = new JPanel();
        JPanel panel = new JPanel();
        JDialog dialog = new JDialog();
        dialog.setModal(true);
        dialog.setTitle("Tu animal interior");
        try {
            //buscar siluetas de animales y pedir a la IA una transicion con gif
            String loadingText = "Analizando...";
            JLabel loadingTextLabel = new JLabel(loadingText);
            URL gifURL = new URL("https://juanxxiiizoo.infinityfreeapp.com/img/animalees.gif");
            ImageIcon originalGif = new ImageIcon(gifURL);
            JLabel loadingGifLabel = new JLabel(originalGif);
            panelLoading.setPreferredSize(new Dimension(550, 600));
            panelLoading.setMinimumSize(new Dimension(550, 600));
            panelLoading.setMaximumSize(new Dimension(550, Short.MAX_VALUE));
            panelLoading.setLayout(new BoxLayout(panelLoading, BoxLayout.Y_AXIS));  
            loadingTextLabel.setAlignmentX(Component.CENTER_ALIGNMENT);
            loadingGifLabel.setAlignmentX(Component.CENTER_ALIGNMENT);
            
            panelLoading.add(loadingTextLabel);
            panelLoading.add(loadingGifLabel);
            dialog.getContentPane().add(panelLoading);
            dialog.pack();
            dialog.setLocationRelativeTo(null);
            
        } catch (MalformedURLException ex) {
            Logger.getLogger(MiniZooMainMenu.class.getName()).log(Level.SEVERE, null, ex);
        }
                    
            Connection con = ConectionDB.connect();
            ArrayList<Integer> species = new ArrayList();
            if(con!=null){
                try{
                    String sql = "SELECT id FROM especies";
                    Statement stmt = con.createStatement();
                    ResultSet rs = stmt.executeQuery(sql);
                    while(rs.next()){
                        int id = rs.getInt("id");
                        species.add(id);
                    }
                    rs.close();
                    stmt.close();                    
                }catch(SQLException e){
                    JOptionPane.showMessageDialog(rootPane,"Ha ocurrido un error en la primera consulta","Error al leer en la base de datos",JOptionPane.ERROR_MESSAGE);
                }
                if(species.size() > 0){
                    int length = species.size();
                    int index = (int)Math.floor(Math.random()*length);
                    int winnerID = species.get(index);
                    try{
                        String sql = "SELECT name,img FROM especies WHERE id = ?";
                        PreparedStatement stmt = con.prepareStatement(sql);
                        stmt.setInt(1, winnerID);
                        ResultSet rs = stmt.executeQuery();
                        
                        String specieName ="";
                        URL imgURL=null;
                        if(rs.next()){
                            specieName = rs.getString("name");
                            imgURL = new URL("https://juanxxiiizoo.infinityfreeapp.com/"+rs.getString("img"));
                        }
                        String qr = "https://juanxxiiizoo.infinityfreeapp.com/img/qr_"+winnerID+".png";
                        URL qrURL = new URL(qr);
                        stmt.close();
                        rs.close();
                        
                        String title = "Tu animal interior es:";
                        JLabel titleLabel = new JLabel(title);
                        JLabel nameLabel = new JLabel(specieName);
                        ImageIcon specieIcon = new ImageIcon(imgURL);
                        Image img = specieIcon.getImage();
                        if(specieIcon.getIconWidth() > 350){
                            int newWidth = 350;
                            int newHeight = (int) ((double)specieIcon.getIconHeight()*newWidth)/specieIcon.getIconWidth();
                            img = img.getScaledInstance(newWidth, newHeight, Image.SCALE_SMOOTH);
                        }
                        ImageIcon specieImg = new ImageIcon(img);
                        JLabel imgLabel = new JLabel(specieImg);
                        String text = "Escanea el QR para obtener mas informacion";
                        JLabel textLabel = new JLabel(text);
                        ImageIcon specieQR = new ImageIcon(qrURL);
                        Image resizedQR = specieQR.getImage().getScaledInstance(200, 200, Image.SCALE_SMOOTH);
                        ImageIcon QR = new ImageIcon(resizedQR);
                        JLabel qrLabel = new JLabel(QR);
                        
                        titleLabel.setAlignmentX(Component.CENTER_ALIGNMENT);
                        nameLabel.setAlignmentX(Component.CENTER_ALIGNMENT);
                        imgLabel.setAlignmentX(Component.CENTER_ALIGNMENT);
                        textLabel.setAlignmentX(Component.CENTER_ALIGNMENT);
                        qrLabel.setAlignmentX(Component.CENTER_ALIGNMENT);

                        panel.setLayout(new BoxLayout(panel, BoxLayout.Y_AXIS));
//                        panel.setPreferredSize(new Dimension(550, 700));
//                        panel.setMinimumSize(new Dimension(550, 700));
//                        panel.setMaximumSize(new Dimension(550, Short.MAX_VALUE));                                           
                        
                        panel.add(titleLabel);
                        panel.add(nameLabel);
                        panel.add(imgLabel);
                        panel.add(textLabel);
                        panel.add(qrLabel);
                        
                        JScrollPane scroll = new JScrollPane(panel);
                        scroll.setPreferredSize(new Dimension(550, 700));
                        scroll.setVerticalScrollBarPolicy(JScrollPane.VERTICAL_SCROLLBAR_AS_NEEDED);
                        scroll.setHorizontalScrollBarPolicy(JScrollPane.HORIZONTAL_SCROLLBAR_AS_NEEDED);
                        
                        new Thread(() -> {
                            try {
                                Thread.sleep(5000);
                                SwingUtilities.invokeLater(() -> {
                                    dialog.setVisible(false); 
                                    
                                    JOptionPane.showMessageDialog(null, scroll, "Resultado", JOptionPane.PLAIN_MESSAGE);
                                });
                            } catch (InterruptedException e) {
                                e.printStackTrace();
                            }
                        }).start();
                        
                        dialog.setVisible(true);
                        
                        
                        con.close();
                        
                        
                        //me falta el codigo para mostrar el JOption Pane del resultado
                        //primero mostrar una pantalla de carga
                        //luego mostrar el resultado
                        
                    }catch(SQLException e){
                        JOptionPane.showMessageDialog(rootPane,"Ha ocurrido un error en la segunda consulta","Error al leer en la base de datos",JOptionPane.ERROR_MESSAGE);
                    } catch (MalformedURLException ex) {
                        Logger.getLogger(MiniZooMainMenu.class.getName()).log(Level.SEVERE, null, ex);
                    }
                }
            }
    }//GEN-LAST:event_btnActionActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MiniZooMainMenu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MiniZooMainMenu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MiniZooMainMenu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MiniZooMainMenu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                MiniZooMainMenu menu = new MiniZooMainMenu();
                menu.setLocationRelativeTo(null);
                menu.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAction;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    // End of variables declaration//GEN-END:variables
}
